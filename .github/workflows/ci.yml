name: CI/CD Pipeline for Flask Vulnerable App

# Trigger the workflow on push or pull request to the main branch
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    # Cache dependencies to speed up builds
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    # Set up Python environment
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    # Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Run Python tests (if you have tests, else this can be skipped)
    #- name: Run tests
    #  run: |
        # Example for running tests (modify based on your test framework)
     #   pytest tests/

    # Build the Docker image
    - name: Build Docker image
      run: |
        docker build -t flask-vulnerable-app .
    # List docker image
    - name: List Docker images
      run: |
        docker images
    # Run the Docker container (optional for testing)
    - name: Run Docker container
      run: |
        docker run -d -p 5000:5000 --name flask-vulnerable-app-container flask-vulnerable-app

    # Check if the app is running (optional step to confirm the app is accessible)
    - name: Check if Flask app is running
      run: |
        sleep 5
        curl --fail http://localhost:5000 || (docker logs flask-vulnerable-app-container && exit 1)

      # Step 8: Clean up
    - name: Stop and remove Docker container
      if: always()
      run: |
        docker stop flask-vulnerable-app-container || true
        docker rm flask-vulnerable-app-container || true
          
    # Push the image to Docker Hub (optional, uncomment if needed)
    # - name: Login to Docker Hub
    #   uses: docker/login-action@v2
    #   with:
    #     username: ${{ secrets.DOCKER_USERNAME }}
    #     password: ${{ secrets.DOCKER_PASSWORD }}

    # - name: Push Docker image to Docker Hub
    #   run: |
    #     docker tag flask-vulnerable-app username/flask-vulnerable-app:latest
    #     docker push username/flask-vulnerable-app:latest
